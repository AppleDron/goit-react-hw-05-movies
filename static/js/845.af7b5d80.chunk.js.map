{"version":3,"file":"static/js/845.af7b5d80.chunk.js","mappings":"gPAAiBA,EAAWC,EAAQ,KAA5BC,QAEKC,EAA4BH,EAAOI,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKtCC,EAAwBP,EAAOI,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gG,SC+D/C,EA9DyB,WAAO,IAADG,EAAAC,EAAAC,EAC7BC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAmC,QAAvBX,EAAiB,QAAjBC,GAFDW,EAAAA,EAAAA,MAEaC,aAAK,IAAAZ,OAAA,EAAdA,EAAgBa,YAAI,IAAAd,EAAAA,EAAI,IAEvCe,GAAMC,EAAAA,EAAAA,QAAOL,GAYnB,OAVAM,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GACbU,MAAK,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACPb,EAAQa,EACV,IACCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,gCAAiCA,EACjD,GACJ,GAAG,CAACd,IAECF,EAIDA,GAEAkB,EAAAA,EAAAA,MAAC/B,EAAyB,CAAAgC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAId,EAAIe,QAAQJ,SAAC,UACvBD,EAAAA,EAAAA,MAAC3B,EAAqB,CAAA4B,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OACEI,OAAM,GAAAC,OAvBC,oCAuBYA,OAAGzB,EAAK0B,aAC3BC,MAAO,IACPC,IAAI,YAENV,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKnB,EAAK6B,SACVX,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAanB,EAAK8B,eACrBV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAInB,EAAK+B,YACTX,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACQ,QADGxB,EACdK,EAAKgC,cAAM,IAAArC,OAAA,EAAXA,EAAasC,KAAI,SAAAC,GAAK,OACrBhB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAsBe,EAAMC,KAAK,MAAtBD,EAAME,GAAwB,WAI/ClB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,WAAAG,OAAavB,EAAO,SAAQiB,SAAC,YAEvCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,WAAAG,OAAavB,EAAO,YAAWiB,SAAC,qBAI9CC,EAAAA,EAAAA,KAACiB,EAAAA,SAAQ,CAACC,UAAUlB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oBAAsBA,UAC7CC,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,cAjCf,GAHSnB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAwChB,C","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["const { default: styled } = require('styled-components');\n\nexport const MovieDetailsPageContainer = styled.div`\n  margin-right: 15px;\n  margin-left: 15px;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  gap: 10px;\n\n  padding: 10px;\n  border-bottom: 1px solid #000;\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/themoviedbAPI';\nimport {\n  MovieDetailsContainer,\n  MovieDetailsPageContainer,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  // const [backLinkHref, setBackLinkHref] = useState(location.state?.from ?? '/');\n  const backLinkHref = location.state?.from ?? '/';\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  const ref = useRef(backLinkHref);\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(({ data }) => {\n        setFilm(data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n  }, [movieId]);\n\n  if (!film) {\n    return <div>Loading...</div>;\n  }\n\n  if (film)\n    return (\n      <MovieDetailsPageContainer>\n        <Link to={ref.current}>Back</Link>\n        <MovieDetailsContainer>\n          <img\n            srcSet={`${BASE_URL}${film.poster_path}`}\n            width={250}\n            alt=\"poster\"\n          />\n          <div>\n            <h1>{film.title}</h1>\n            <p>User score: {film.vote_count}</p>\n            <h2>Overview</h2>\n            <p>{film.overview}</p>\n            <h3>Genres</h3>\n            {film.genres?.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n          </div>\n        </MovieDetailsContainer>\n        <div>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n            </li>\n            <li>\n              <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<div>Loading info...</div>}>\n          <Outlet />\n        </Suspense>\n      </MovieDetailsPageContainer>\n    );\n};\n\nexport default MovieDetailsPage;\n"],"names":["styled","require","default","MovieDetailsPageContainer","div","_templateObject","_taggedTemplateLiteral","MovieDetailsContainer","_templateObject2","_location$state$from","_location$state","_film$genres","_useState","useState","_useState2","_slicedToArray","film","setFilm","movieId","useParams","backLinkHref","useLocation","state","from","ref","useRef","useEffect","getMovieDetails","then","_ref","data","catch","error","console","_jsxs","children","_jsx","Link","to","current","srcSet","concat","poster_path","width","alt","title","vote_count","overview","genres","map","genre","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}